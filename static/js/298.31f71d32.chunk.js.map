{"version":3,"file":"static/js/298.31f71d32.chunk.js","mappings":"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","sources":["webpack://first-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://first-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/ProfileInfo/MyPostsContainer.jsx","components/Profile/MyPosts/ProfileInfo/ProfileStatus.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__WRYd7\",\"posts\":\"MyPosts_posts__HFHb-\",\"descriptionBlock\":\"MyPosts_descriptionBlock__SVyGH\",\"backgroundImage\":\"MyPosts_backgroundImage__3qWl5\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__a7jAS\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src={props.image} alt=''/>\r\n            {props.message}\r\n            <div>\r\n                <span>Likes {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements = props.posts.map(p => <Post image={p.image} message={p.message} likesCount={p.likesCount} key={p.id}/>)\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    }\r\n    let newPostElement = React.createRef();\r\n    let onPostChange = () => {\r\n        let newText = newPostElement.current.value;\r\n        props.updateNewPostText(newText);\r\n    };\r\n if (!props.profile) {\r\n     return <Preloader />\r\n }\r\n  return <div className={s.content}>\r\n        <div className={s.postsBlock}>\r\n            <div>\r\n                <img className={s.backgroundImage} src={props.mainBackground} alt='' />\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <div>{props.profile.fullName}</div>\r\n                <div>{props.profile.lookingForAJob}</div>\r\n                <div>{props.profile.lookingForAJobDescription}</div>\r\n                <img src={props.profile.photos.small} alt=''/>\r\n                <div><Link target=\"_blank\" to={`https://${props.profile.contacts.github}`}>GitHub</Link></div>\r\n                <div><Link target=\"_blank\" to={`https://${props.profile.contacts.vk}`}>VK</Link></div>\r\n                <div><Link target=\"_blank\" to={`https://${props.profile.contacts.facebook}`}>Facebook</Link></div>\r\n                <div><Link target=\"_blank\" to={`https://${props.profile.contacts.instagram}`}>Instagram</Link></div>\r\n                <div><Link target=\"_blank\" to={`https://${props.profile.contacts.twitter}`}>Twitter</Link></div>\r\n                <div><Link target=\"_blank\" to={`https://${props.profile.contacts.youtube}`}>Youtube</Link></div>\r\n                <div><Link target=\"_blank\" to={`https://${props.profile.contacts.mainLink}`}>MainLink</Link></div>\r\n            </div>\r\n            <h2>My posts</h2>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={onAddPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    </div>;\r\n})\r\nexport default MyPosts;","import React from 'react';\r\nimport MyPosts from \"../MyPosts\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../../redux/profile_reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet  mapStateToProps = (state) => {\r\n    return {\r\n        posts:state.profilePage.posts,\r\n        newPostText:state.profilePage.newPostText,\r\n        mainBackground:state.profilePage.mainBackground,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        },\r\n        updateNewPostText: (newText) => {\r\n            dispatch(updateNewPostTextActionCreator(newText))\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatus = (props) => {\r\n    useState(false);\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    useEffect( ()=>{\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\r\n                </div>}\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n/*\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status:e.currentTarget.value\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState( {\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \"-----\"}</span>\r\n                    </div>}\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                    </div>}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n*/\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport MyPostsContainer from \"./MyPosts/ProfileInfo/MyPostsContainer\";\r\nimport ProfileStatus from \"./MyPosts/ProfileInfo/ProfileStatus\";\r\n\r\nconst Profile = (props) => {\r\n    return <div>\r\n        <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer store={props.store} profile={props.profile}/>\r\n    </div>;\r\n}\r\nexport default Profile;","import React, {useEffect} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatusThunk, setUserProfileThunk, updateStatusThunk} from \"../../redux/profile_reducer\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nfunction ProfileContainer(props) {\r\n    let {userId} = useParams();\r\n    if (!userId) {\r\n        userId = 30910;\r\n    }\r\n    useEffect(() => {\r\n        props.setUserProfileThunk(userId)\r\n            props.getStatusThunk(userId)\r\n    }, [userId]);\r\n    return <div>\r\n        <Profile profile={props.profile} status={props.status} updateStatus={props.updateStatusThunk}/>\r\n    </div>;\r\n}\r\n\r\nlet mapStateToProps = (state) => ({profile: state.profilePage.profile,\r\n    status: state.profilePage.status, authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserProfileThunk, updateStatusThunk, getStatusThunk}),\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n\r\n","import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth:state.auth.isAuth\r\n});\r\nexport const withAuthRedirect = (Component) => {\r\n    let RedirectComponent = (props) => {\r\n            if (!props.isAuth) return <Navigate to=\"/login\" />\r\n            return <Component {...props}/>\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["props","_jsxs","className","s","children","_jsx","src","image","alt","message","likesCount","React","postsElements","posts","map","p","Post","id","newPostElement","profile","content","postsBlock","backgroundImage","mainBackground","descriptionBlock","fullName","lookingForAJob","lookingForAJobDescription","photos","small","Link","target","to","concat","contacts","github","vk","facebook","instagram","twitter","youtube","mainLink","onChange","newText","current","value","updateNewPostText","ref","newPostText","onClick","addPost","Preloader","connect","state","profilePage","dispatch","addPostActionCreator","updateNewPostTextActionCreator","MyPosts","useState","_useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","onDoubleClick","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileStatus","MyPostsContainer","store","compose","authorizedUserId","auth","userId","isAuth","setUserProfileThunk","updateStatusThunk","getStatusThunk","withAuthRedirect","useParams","Profile","mapStateToPropsForRedirect","Component","_objectSpread","Navigate"],"sourceRoot":""}